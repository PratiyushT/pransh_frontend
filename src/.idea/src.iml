Vm0weE5GWXhXWGhXYmtwUFZteHdVRlpzWkc5V1ZteHlXa2M1YW1KR1NsbFVWbHBQWVcxS1NHVkljRmROYWtaSVZrUkdZV1JIVWpaVGJGcE9ZV3hhVVZkV1VrdFRNVnAwVkd0c2FGSnNXbGhXYWtaTFRteGFjbHBFVWxkTlJGWjZWbTAxUjFaWFNrZFRiR2hWVm5wV2RsVnNXbXRYUjFKSVpFWlNUbUpGY0VsV2JHTXhWakZrU0ZOc1dsaGlSa3BXVm01d1YyUldjRlpYYkhCc1ZsUldXbFl5TVRCVWJVVjRZMFpzVjJGcmJ6QlpWRVpoWkVaS1dXSkdXbWhsYkZwWlYxWlNTMVV5VG5OaE0yUllZa2RTVlZacVFuWk5iRlpZWlVaT1ZXSkdjRmRaTUZaM1ZqRktjMk5JV2xoV2JIQjZWbXBHVTJOc2NFZGhSMnhwWVRCd1lWWXhaREJXYXpGWFUydGtWbUpHY0doVmJURlRWMVphZEdSSFJrNVNia0pYVmpKMGExWXlSalpTYTNCV1ZqTm9NMVpxUmxwbGJVWkhZVVphYkdFeGIzcFhXSEJIVmpKTmVGcElUbEppUjFKWVdXdG9RMWRzV25STlZGSnBUV3RzTkZVeGFHOVdWMHBJWVVoQ1ZtSkdWWGhXUkVaelkyMUdSbFJzYUdsU2JGa3hWa2Q0YjJFeVJrZFRiazVwWld0d1lWbFVSa3RUUmxwMFpVVjBhbUY2VmxkYVJWcFhWakZhYzJORVdsaFdSVnBYVkZaYVMyUkdWbkpYYlhCVFlUTkNVRlpYZUdGV2JWRjRWMjVHVTJKRk5WVlpXSEJYVjFaYVdHUkhPVmRXTUZZMVdWVmFSMVl3TVVkalIyaGFWbFp3YUZwR1pFOVNNV1IwWkVVMVYxWkdXbGxXYWtadlpERkplVkpyWkZSWFIxSnhWVzB4TkZkR2JISlhhM1JzWWtaV05WUldWbXRVTWtwSFkwUkdWMUo2UmtoV1ZFWkxWbXhrVlZGc2FHaE5iRVYzVjJ0U1IxUXhXWGhhU0ZaWFlrWmFjRlpzV25kWFZtUlhWV3M1VW1KV1dsaFhhMXB2WVd4S1ZXSkdaRlZXYkhCTVdsZDRjMk5zWkhSUFZsWk9WbTEzTVZkV1ZtdGlNVnBYVjFod2FGSXlhRlpaYTFwM1ZVWlpkMXBGZEU5aVJWcDZWbGR6TVZVd01IbGhSV1JYWWtad2FGbFVTa1psUmxKMVZHeFNhRTF1YUhaV1ZFSlhXVlpzVjJKR2FHdFRSWEJ6VlcxNFMxWXhXWGxPVjNSWVVtdHdWbFp0ZUdGV2JGbDZWV3BPVjJFeGNFeFpla3BMVG14S2MyRkdaRTVOVlhCVlZqSjBVMU14U1hoWFdHeFZZVEo0VjFsc1pEUldWbFp6Vld4a2FVMVdjREJhUldSM1ZERmFWVkp1Y0ZkV00xSjZXVlphUzJOck5WZFhiSEJvVFZoQ1NWWkdVa2RaVm1SSVZtdG9VMkpIVWxoWlZFNURWMVphY1ZOWVpHeFNiSEF3Vld4b2IxZEhTblZSYkdoWFlURmFURlJVUmxkamJHUnlUMVprVTAxVmNFaFdiR040WWpGWmVGZHNaR3BTUlZwWVZtdFdZVmRHV2tWU2EyUnFUV3RzTmxkclpITlZNVnB6WTBod1YxWXpRbEJaYWtwT1pVWmFkVkpzU2xkU1ZuQjZWMWQwYjFFeFRrZGFTRXBZWVhwc2IxWnRkSGRsVm10M1ZXdE9WMVpVUmxsWlZWcERWMFphYzJORmRHRldWbkJ5V1RGYVlXTXhWbk5hUm1ST1lsZG9ZVlpxU2pSWlYwVjRWRmhvVkdKR2NFOVdiR1J2WTBaV2NWRnRSbXBTYkhCNFZrY3dOVlF5U2tkaVJGWmhWbFp3VUZsVVNrdFdNVTUxWWtkR1YxWnJjRmxXYlRCNFVqQTFjMWR1VGxoaVJscFlWbTAxUTFSV1duUmpSV1JhVm10d2VsWXlOVTlaVmtsM1YyNUNWbUpIYUVSVk1GcHJWMGRTU0ZKc1ZrNVdWRVV3VmxjeGQxbFhSa2RUYTFwWVlsZG9WMWxyWkZOVlJsSnlWMjVrVTFacldqRldSekYzVlRKRmVHTkhSbGRoYTI4d1ZXcEdjMVpyTVZsU2JXeFVVbXh3V0ZaR1dtRlpWbFpIVm14b2JGTkdjSEpVVjNSM1VqRmFXR1ZGZEZkTlZXdzFXVlZqTlZZeVJuSlRia3BhWVd0d1VGWnFTa3RUVms1MFlVWk9hVlpyY0RKV2ExcGhZakZGZUZkWWFGaFhSM2hRVm1wQ1lXSXhXblJrU0U1UFVteFdOVlJzVlRWWFIwWTJVbXBDWVZaV1dsUldiRnBoWkVaV2MxRnRSbE5XTVVwVlZrY3dlRk14U25SVWEyaHBVbTFTY0ZsVVFuTk9iRnB4VW0xMFRsSXdWalJXTWpWTFZERmtSbU5JVGxaaE1YQm9WbFphVjJOV1VuTlViR1JwVW01Q05sWnNZekZVTVZWNVUydGthbE5JUWxoWmJHaERWa1phVlZOcmRGUlNia0pHVmtkNGExWXdNSGhUV0hCWFlsUkNORlZxUmxwbFJrNTFVbXhTYVZaV2NGVldiWEJIVXpGa1YxcElTbGRpV0ZKV1ZGWldkMU5HV2tobFJ6bGFWbXR3VmxWdE5VOVhiRmw2WVVWNFYxSnNjRmRhVlZwaFkyczVWMU50YkZObGJYUTJWakZrTUZZeFZYaFdiazVZVjBkNFYxbHJWbmRXTVd4WVpFZEdXbFpzU2xkV01qRXdWakZhY2s1WWFGZFdNMDE0Vm1wS1MyTnNUbkpqUm1ScFZrVldNMWRXVWt0U01WcHlUVlpzVjJKWGFGVlZiR2hEVjJ4a1dHUkhkR2xOVlRFMFYydG9SMVpIU2taT1ZteFhZbGhOZUZSV1dtRlRSMVpHV2taa2FHVnJXa3RXVm1SM1VURmtSMWR1VG1wVFJYQldXVlJLVTFSR1ZuUmplbFpZVm10YWVsVlhlRk5WTWtweVUyczFWMkpIVVRCV1ZFWktaVVphYzFwR1pHbGhNMEphVjFkMGExVXhXbk5YYmxKclUwZFNXVlZ0ZUVkT1JscDBaVWQwVjAxVmNIcFpNR2h6VjIxRmVXRkZlRmRpUm5CTVZXMXpNVll4Vm5SU2JFNVhUVlZ3VWxac1pEQlpWbEY0V2tWa2FsSldjRTlXYWs1dllqRnNjbFp1WkZWaVJuQldWVzE0YTFaVk1WWlhibkJhWVdzMWNsbFdXa3RXTVdSMVUyeFdWMUpXYjNwV01WcGhWVEZrU0ZScmJGVmhlbFpZV1cxMFMxTkdXWGxrUjBab1RXdFdORll4YUc5V1IwVjRZMFphV2xaRldtRmFSRVpXWlZkV1JsZHRkRTVXV0VGM1ZrZDRZVlV4V1hoWGJrcG9UVEpTV1ZsVVNrOU9SbHBGVTJ4T1UwMVdjREZXVnpFMFZUQXdkMU51V2xkU2JIQm9Xa2N4VjFJeGNFbFRiR1JwVmtkNFZsWkdWbE5XTVZsNFlraEtWMkpyTlZoWmJGWmhaV3haZVU1VlpGZGlWVnA1VmpKNGExWlhTa2RqUmtKWFRVWldORll4V2xOa1IxSkhXa1UxVTJKclNreFdiVEIzWkRBeFdGUlliRk5oTWxKb1ZXeGtVMVpXYkhSamVrWllWbTE0VmxWdE1VZFVhekZZWlVaYVZrMXVVbkpXUkVaaFkyczFWMkpHYUdoTlZsa3dWMWQwYTFJeVRYaFVia3BPVm14d1QxWnRlSGRWVmxwWFdrUlNhMkpXUmpWVk1uUmhWakpLV1dGR1ZsWmlWRlpFV2xWYWExZEhWa2hTYkZKT1lYcEZNRmRXVWs5ak1rVjRVMjVTVm1KcmNGaFpWM1JoVkVaVmVXVkdXbXhXTURWSVYydGFVMkZXU2xWV2EyeFhWa1ZhVkZWcVJtdGphekZXWVVaYWFWSXhTbGRXUmxwaFdWZFdjMk5GWkZoaVJUVnlWbTB4VTAxR2NFWlhiVGxXVFZkU1IxVXljRk5XTWtaeVlucENWMkZyV25wV01GcFhaRlpXYzFWdGFFNWlWMmhaVmpGa05HSXlTWGxVYkdScFVtMVNXRmx0Y3pGalJteHlXa1pPVGxKc1NsZFdWM2hyWVZaS2MyTkljRnBOUmxwNlZtcEtTMVpXV25GVWJIQlhVbFp3VVZaWE1YcGxSa3BYVjI1T1ZtSkhVbk5aVkVaM1pHeFplRmRzWkdoTlZURTBWa2Q0YTFadFNuTlRiazVXWWtkb1JGbHFSbUZqTVZwelkwZDRWMkpJUWxoV01uUnJUVWRGZVZOcmFGQldSVFZoV1ZSR1lWZEdiRlZSV0dSc1VqQTFTVlZ0ZUZkV01EQjNVMnBhVjFKc1dtaFpNakZTWlVkS1JWZHNaR2xYUmtwWlYxY3hNRk14WkhOWGEyaHNVbXMxVTFSV1dtRlhSbXh4Vkc1T1ZsSnJjRWhWTW5oaFZtMUZlRmR1Y0ZWaE1YQXpWVEJrVjFOV2NFZFZiR1JwVTBWR05GWnRkR3BsUmtsNFYxaG9WR0V5VWxSV2ExcFdUMUU5UFE9PQ==